for example:

computer chooses: SICK

user inputs: HELP 

S -> 0
I -> 1
C -> 2
k -> 3

retain count of:
1. letters not present(A)
2. letters present, but in wrong position (B) 
3. leters present, and in right position (C)


S I C K
H E L P

1. Look for sick.find("h"), returns "npos". Increment "A" by 1.
2. Look for sick.find("e"), returns "npos". Increment "A" by 1.
3. Look for sick.find("l"), returns "npos". Increment "A" by 1.
4. Look for sick.find("p"), returns "npos". Increment "A" by 1.

Results
A = 4
B = 0
C = 0

Increment number of tries by 1.



S I C K
S O I L

1. Look for sick.find("s"), returns 0. Check position of "s" in input word. Increment "C" by 1.
2. Look for sick.find("o"), returns "npos". Increment "A" by 1.
3. Look for sick.find("i"), returns 2. Check position of "i" in input word. Increment "B" by 1.
4. Look for sick.find("l"), returns "npos". Increment "A" by 1.

Results
A = 2
B = 1
C = 1

Increment number of tries by 1. 



CLASSES 
--------

1. GAME class 

- public members 
    - default constructor()
    - create new game 
    - end game
    - return try evalution
    - generate word 
    - print rules

- private members
    - num of tries 
    - computer generated word


2. Guess class

- public members 
    - default constructor()
    - evaluate guess
    - return guess evaluation

- private members 
    - A 
    - B 
    - C 


Guess class will utilize pointers 
- remembers to curate pointers that are created with each Guess class and when it is destroyed. 




